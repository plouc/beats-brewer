{"version":3,"sources":["audio/tr808/tr808_bass_drum_001.wav","audio/tr808/tr808_bass_drum_002.wav","audio/tr808/tr808_snare_001.wav","audio/tr808/tr808_snare_002.wav","audio/tr808/tr808_clap_001.wav","audio/tr808/tr808_clap_002.wav","audio/tr808/tr808_rimshot_001.wav","audio/tr808/tr808_rimshot_002.wav","audio/tr808/tr808_hihat_open_001.wav","audio/tr808/tr808_hihat_open_002.wav","audio/tr808/tr808_hihat_closed_001.wav","audio/tr808/tr808_hihat_closed_002.wav","audio/tr808/tr808_congas_low_001.wav","audio/tr808/tr808_congas_low_002.wav","audio/tr808/tr808_congas_high_001.wav","audio/tr808/tr808_congas_high_002.wav","ui/theme/GlobalStyle.ts","ui/Spacer.tsx","ui/controls/Select.tsx","ui/controls/HardwareButton.tsx","ui/controls/RoundIconButton.tsx","ui/LCDScreen.tsx","ui/theme/darkTheme.ts","useApp.ts","ui/BpmControl.tsx","ui/theme/themes.ts","ui/theme/lightTheme.ts","ui/theme/ThemeSelector.tsx","ui/AppHeader.tsx","library/samples.ts","library/demoProjects.ts","library/demoProject.ts","library/drumKits.ts","explorer/ExplorerFolder.tsx","explorer/Explorer.tsx","ui/Desk.tsx","ui/Enclosure.tsx","ui/ComponentHeader.tsx","ui/ComponentName.tsx","sequencer/SequencerBars.tsx","ui/controls/SquareIconButton.tsx","ui/controls/PlayerControls.tsx","sequencer/SequencerHeader.tsx","mixer/MixerChannelSelector.tsx","sequencer/TrackHeading.tsx","sequencer/SequencerTimeline.tsx","sequencer/TrackSteps.tsx","sequencer/SequencerTracks.tsx","sequencer/Sequencer.tsx","sequencer/useStepSequencer.ts","mixer/MixerChannel.tsx","mixer/Mixer.tsx","ui/controls/CloseButton.tsx","ui/controls/NumberInput.tsx","ui/controls/SliderControl.tsx","effects/EffectWetControl.tsx","effects/ReverbControls.tsx","effects/DistortionControls.tsx","effects/EffectsControls.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","props","theme","typography","monospacedFont","colors","background","text","SpacerHorizontal","styled","span","size","HSpacer","SpacerVertical","VSpacer","Select","select","enclosureBackground","darken","rgba","lighten","HardwareButton","hasPrevious","hasNext","isInactive","css","textLight","isPressed","RoundIconButton","LCDScreen","div","lcdBackground","lcdText","lcdBorder","LCDScreenHighlightedText","lcdHighlightText","darkTheme","id","name","headingFont","accent","wood","enclosureBorder","DEFAULT_BPM","useAppStore","create","set","get","setTheme","bpm","setBpm","Tone","value","createEmptyProject","project","uuidV4","patterns","openedPatterns","loadProject","projectData","currentProject","undefined","channels","forEach","channel","channelIndex","updateChannel","map","patternData","tracks","trackData","Error","trackPlayer","audioFile","console","log","connect","player","length","openPattern","patternId","find","p","pattern","closePattern","filter","master","toDestination","sources","effectConfigs","type","wet","distortion","preDelay","decay","effects","destination","effect","reverb","appliedEffect","instance","push","index","allEffects","openedEffects","openEffect","effectId","e","closeEffect","genresBpm","BpmControl","state","handleMinus","useCallback","Math","max","handlePlus","min","handleSelect","event","target","Number","currentGenre","Container","onClick","Screen","Current","toFixed","padStart","onChange","genre","genreBpm","themes","ThemeSelector","currentTheme","newTheme","t","AppHeader","AppName","Controls","tr808BassDrum1","require","default","tr808BassDrum2","tr808Snare1","tr808Snare2","tr808Clap1","tr808Clap2","tr808Rimshot1","tr808Rimshot2","tr808HiHatOpen1","tr808HiHatOpen2","tr808HiHatClosed1","tr808HiHatClosed2","tr808CongasLow1","tr808CongasLow2","tr808CongasHigh1","tr808CongasHigh2","kickColor","snareColor","clapColor","rimshotColor","hiHatColor","congasColor","samples","color","sampleByName","sampleName","sample","s","demoProjects","isMuted","steps","drumKits","ExplorerFolder","title","defaultIsOpen","children","useState","isOpen","setIsOpen","toggle","previous","Header","Explorer","SubTitle","SectionTitle","Item","drumKit","h2","h3","Desk","Enclosure","Side","Top","Body","Bottom","ComponentHeader","ComponentName","ComponentNameHighlight","SequencerBars","bars","setBars","SquareIconButton","PlayerControls","isPlaying","play","stop","SequencerHeader","doubleBars","MixerChannelSelector","handleUp","handleDown","Button","TrackHeading","track","toggleTrack","handleToggle","TrackHeadingContainer","TrackName","MuteIcon","SequencerTimeline","current","stepIndexes","useMemo","Array","from","_","isCurrent","Step","TrackSteps","currentStep","toggleStep","Grid","step","isActive","onToggle","StepElement","isOdd","SequencerTracks","Sequencer","stepIndex","setStepIndex","setTracks","setBarsAndAdjustTracks","newBars","newStepCount","newSteps","slice","i","trackId","setIsPlaying","start","tracksRef","useRef","useEffect","tick","time","schedule","sequence","dispose","useStepSequencer","TrackHeadings","MixerChannel","mute","setIsMuted","toggleMute","ChannelName","ValueBlock","ValueLabel","ValueScreen","volume","pan","EffectLabel","Mixer","Channels","CloseButton","onClose","NumberInput","input","SliderControl","Track","EffectWetControl","setWet","handleChange","newWet","SliderContainer","ReverbControls","handleClose","setPreDelay","handlePreDelayChange","newPreDelay","setDecay","handleDecayChange","newDecay","Content","DistortionControls","distortionEffect","setDistortion","handleDistortionChange","newDistortion","EffectsControls","Layout","Row","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3345a427.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tr808_bass_drum_001.6bff9155.wav\";","export default __webpack_public_path__ + \"static/media/tr808_bass_drum_002.aa0b9aac.wav\";","export default __webpack_public_path__ + \"static/media/tr808_snare_001.f857353c.wav\";","export default __webpack_public_path__ + \"static/media/tr808_snare_002.56130b54.wav\";","export default __webpack_public_path__ + \"static/media/tr808_clap_001.e59bafa0.wav\";","export default __webpack_public_path__ + \"static/media/tr808_clap_002.9e9fbf74.wav\";","export default __webpack_public_path__ + \"static/media/tr808_rimshot_001.60210f1f.wav\";","export default __webpack_public_path__ + \"static/media/tr808_rimshot_002.f1681fd2.wav\";","export default __webpack_public_path__ + \"static/media/tr808_hihat_open_001.1c39c77d.wav\";","export default __webpack_public_path__ + \"static/media/tr808_hihat_open_002.5dae54ca.wav\";","export default __webpack_public_path__ + \"static/media/tr808_hihat_closed_001.8f60c1ec.wav\";","export default __webpack_public_path__ + \"static/media/tr808_hihat_closed_002.22d20eb5.wav\";","export default __webpack_public_path__ + \"static/media/tr808_congas_low_001.0dfd9493.wav\";","export default __webpack_public_path__ + \"static/media/tr808_congas_low_002.8a26053a.wav\";","export default __webpack_public_path__ + \"static/media/tr808_congas_high_001.e46317dd.wav\";","export default __webpack_public_path__ + \"static/media/tr808_congas_high_002.f0e1cdca.wav\";","import { createGlobalStyle } from 'styled-components/macro'\n\nexport const GlobalStyle = createGlobalStyle`\n    body, html {\n        font-family: ${(props) => props.theme.typography.monospacedFont};\n        text-rendering: optimizeLegibility;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background-color: ${(props) => props.theme.colors.background};\n        color: ${(props) => props.theme.colors.text};\n    }\n    \n    *, *:after, *:before {\n        box-sizing: border-box;\n    }\n    \n    a {\n        color: inherit;\n    }\n`\n","import styled from 'styled-components/macro'\n\ninterface SpacerProps {\n    size?: 'xsmall' | 'small' | 'medium' | 'large'\n}\n\nconst SpacerHorizontal = styled.span<{\n    size: SpacerProps['size']\n}>`\n    display: inline-block;\n    width: ${({ size }) => {\n        if (size === 'xsmall') return 6\n        if (size === 'small') return 12\n        if (size === 'large') return 36\n        return 24\n    }}px;\n    height: 6px;\n`\n\nexport const HSpacer = ({ size = 'medium' }: SpacerProps) => <SpacerHorizontal size={size} />\n\nconst SpacerVertical = styled.span<{\n    size: SpacerProps['size']\n}>`\n    display: block;\n    height: ${({ size }) => {\n        if (size === 'xsmall') return 4\n        if (size === 'small') return 6\n        if (size === 'large') return 24\n        return 12\n    }}px;\n`\n\nexport const VSpacer = ({ size = 'medium' }: SpacerProps) => <SpacerVertical size={size} />\n","import styled from 'styled-components'\nimport { darken, lighten, rgba } from 'polished'\n\nexport const Select = styled.select`\n    height: 32px;\n    font-size: 12px;\n    color: inherit;\n    padding: 4px 7px;\n    border-radius: 2px;\n    background-color: ${(props) => props.theme.colors.enclosureBackground};\n    border: 1px solid ${(props) => darken(0.08, props.theme.colors.enclosureBackground)};\n    cursor: pointer;\n    font-family: ${(props) => props.theme.typography.monospacedFont};\n    box-shadow: 0 1px 2px\n        ${(props) => rgba(darken(0.1, props.theme.colors.enclosureBackground), 0.35)};\n\n    &:focus {\n        cursor: auto;\n        outline: 0;\n        background-color: ${(props) => lighten(0.03, props.theme.colors.enclosureBackground)};\n    }\n`\n","import styled, { css } from 'styled-components/macro'\nimport { lighten, darken, rgba } from 'polished'\n\nexport const HardwareButton = styled.span<{\n    isPressed?: boolean\n    isInactive?: boolean\n    hasNext?: boolean\n    hasPrevious?: boolean\n}>`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 11px;\n    font-family: ${(props) => props.theme.typography.monospacedFont};\n    font-size: 11px;\n    height: 26px;\n    cursor: pointer;\n    user-select: none;\n\n    border-radius: ${(props) => {\n        if (props.hasPrevious && props.hasNext) return 0\n        if (props.hasPrevious) return `0 3px 3px 0`\n        if (props.hasNext) return `3px 0 0 3px`\n        return `3px`\n    }};\n\n    ${({ theme, isInactive }) => {\n        if (isInactive) {\n            return css`\n                color: ${theme.colors.textLight};\n\n                &:hover {\n                    color: ${theme.colors.text};\n                }\n            `\n        }\n\n        return css`\n            color: ${theme.colors.text};\n        `\n    }};\n\n    ${({ theme, isPressed }) => {\n        if (isPressed) {\n            return css`\n                background: linear-gradient(\n                    180deg,\n                    ${darken(0.01, theme.colors.enclosureBackground)},\n                    ${theme.colors.enclosureBackground}\n                );\n                box-shadow: inset 0 1px 0 ${darken(0.06, theme.colors.enclosureBackground)},\n                    inset 0 2px 0 ${darken(0.08, theme.colors.enclosureBackground)},\n                    inset 0 4px 4px ${rgba(darken(0.2, theme.colors.enclosureBackground), 0.25)},\n                    0 0 0 1px ${lighten(0.02, theme.colors.enclosureBackground)};\n            `\n        }\n\n        return css`\n            background: ${theme.colors.enclosureBackground};\n            box-shadow: inset 0 -1px 0 ${darken(0.04, theme.colors.enclosureBackground)},\n                0 2px 4px ${rgba(darken(0.2, theme.colors.enclosureBackground), 0.25)},\n                inset 0 1px 0 ${lighten(0.08, theme.colors.enclosureBackground)},\n                0 1px 0 1px ${darken(0.02, theme.colors.enclosureBackground)};\n\n            &:hover {\n                box-shadow: inset 0 -1px 0 ${darken(0.03, theme.colors.enclosureBackground)},\n                    0 1px 2px ${rgba(darken(0.2, theme.colors.enclosureBackground), 0.25)},\n                    inset 0 1px 0 ${lighten(0.06, theme.colors.enclosureBackground)},\n                    0 0 0 1px ${darken(0.02, theme.colors.enclosureBackground)};\n            }\n        `\n    }}\n`\n","import styled from 'styled-components/macro'\nimport { HardwareButton } from './HardwareButton'\n\nexport const RoundIconButton = styled(HardwareButton)<{\n    isPressed?: boolean\n    isInactive?: boolean\n    hasNext?: boolean\n    hasPrevious?: boolean\n}>`\n    padding: 0;\n    font-size: 12px;\n    width: 24px;\n    height: 24px;\n    border-radius: 12px;\n`\n","import styled from 'styled-components'\nimport { rgba } from 'polished'\n\nexport const LCDScreen = styled.div`\n    background-color: ${(props) => props.theme.colors.lcdBackground};\n    color: ${(props) => props.theme.colors.lcdText};\n    box-shadow: inset 0 0 0 1px ${(props) => props.theme.colors.lcdBorder},\n        0 2px 3px rgba(0, 0, 0, 0.1) inset;\n    border-radius: 3px;\n    font-family: 'VT323', monospace;\n    font-size: 16px;\n`\n\nexport const LCDScreenHighlightedText = styled.span`\n    color: ${(props) => props.theme.colors.lcdHighlightText};\n    text-shadow: 0 0 6px ${(props) => rgba(props.theme.colors.lcdHighlightText, 0.6)};\n`\n","import { DefaultTheme } from 'styled-components'\n\nexport const darkTheme: DefaultTheme = {\n    id: 'dark',\n    name: 'Dark Theme',\n    typography: {\n        headingFont: `'Montserrat', sans-serif`,\n        monospacedFont: `'IBM Plex Mono', monospace`,\n    },\n    colors: {\n        background: '#242425',\n        text: '#ffffff',\n        textLight: '#888888',\n        accent: '#7bb392',\n        wood: '#402a1a',\n        enclosureBorder: '#242425',\n        enclosureBackground: '#2d2d2d',\n        lcdBackground: '#4c151a',\n        lcdBorder: '#311716',\n        lcdText: '#a14638',\n        lcdHighlightText: '#dd6755',\n    },\n}\n","import create from 'zustand'\nimport { DefaultTheme } from 'styled-components'\nimport * as Tone from 'tone'\nimport { v4 as uuidV4 } from 'uuid'\nimport { ProjectData, Project, Pattern, Channel } from './project/definitions'\nimport { Effect } from './effects/definitions'\nimport { darkTheme } from './ui/theme/darkTheme'\n\ninterface AppStore {\n    theme: DefaultTheme\n    setTheme: (theme: DefaultTheme) => void\n    bpm: number\n    setBpm: (bpm: number) => void\n    project?: Project\n    createEmptyProject: () => void\n    loadProject: (projectData: ProjectData) => void\n    openedPatterns: Pattern[]\n    openPattern: (patternId: string) => void\n    closePattern: (patternId: string) => void\n    master: Tone.Channel\n    channels: Channel[]\n    updateChannel: (channel: Channel, channelIndex: number) => void\n    allEffects: Effect[]\n    openedEffects: Effect[]\n    openEffect: (effectId: string) => void\n    closeEffect: (effectId: string) => void\n}\n\nconst DEFAULT_BPM = 130\n\nexport const useAppStore = create<AppStore>((set, get) => ({\n    theme: darkTheme,\n    setTheme: (theme: DefaultTheme) => set({ theme }),\n    bpm: DEFAULT_BPM,\n    setBpm: (bpm: number) => {\n        Tone.Transport.bpm.value = bpm\n        set({ bpm })\n    },\n    createEmptyProject: () => {\n        Tone.start()\n        Tone.Transport.bpm.value = DEFAULT_BPM\n        set({\n            bpm: DEFAULT_BPM,\n            project: {\n                id: uuidV4(),\n                name: 'New Project',\n                bpm: DEFAULT_BPM,\n                patterns: [],\n            },\n            openedPatterns: [],\n        })\n    },\n    loadProject: (projectData: ProjectData) => {\n        const currentProject = get().project\n\n        // do not re-open current project\n        if (currentProject !== undefined && currentProject.id === projectData.id) return\n\n        Tone.start()\n        Tone.Transport.bpm.value = projectData.bpm\n\n        get().channels.forEach((channel, channelIndex) => {\n            get().updateChannel(channel, channelIndex)\n        })\n\n        // convert the project data to a usable loaded project\n        const project = {\n            ...projectData,\n            patterns: projectData.patterns.map((patternData) => {\n                return {\n                    ...patternData,\n                    tracks: patternData.tracks.map((trackData) => {\n                        const channel = get().channels[trackData.channel]\n                        if (channel === undefined) {\n                            throw new Error(\n                                `channel ${trackData.channel} does not exist for track \"${patternData.name} > ${trackData.name}\" (id: ${trackData.id})`\n                            )\n                        }\n\n                        const trackPlayer = new Tone.Player(trackData.audioFile, () => {\n                            console.log(`[loaded] ${patternData.name}/${trackData.name}`)\n                        })\n                        trackPlayer.connect(channel.channel)\n\n                        return {\n                            ...trackData,\n                            player: trackPlayer,\n                        }\n                    }),\n                }\n            }),\n        }\n\n        set({ project, bpm: project.bpm, openedPatterns: [] })\n\n        // open the first pattern, maybe something we won't keep in the long term,\n        // but it's easier to get started this way\n        if (project.patterns.length > 0) {\n            get().openPattern(project.patterns[0].id)\n        }\n    },\n    openedPatterns: [],\n    openPattern: (patternId: string) => {\n        // no loaded project\n        const project = get().project\n        if (!project) return\n\n        // pattern already open\n        if (get().openedPatterns.find((p) => p.id === patternId)) return\n\n        // pattern not found\n        const pattern = project.patterns.find((p) => p.id === patternId)\n        if (!pattern) return\n\n        set({\n            openedPatterns: [...get().openedPatterns, pattern],\n        })\n    },\n    closePattern: (patternId: string) => {\n        set({\n            openedPatterns: get().openedPatterns.filter((pattern) => pattern.id !== patternId),\n        })\n    },\n    master: new Tone.Channel().toDestination(),\n    channels: [\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [\n                {\n                    id: '64e8dc74-fbb5-4dbd-9107-2cebed7d9676',\n                    type: 'distortion',\n                    wet: 0.6,\n                    distortion: 1,\n                },\n                {\n                    id: 'ecc6f983-c637-4507-874e-b924ec4a05d2',\n                    type: 'reverb',\n                    wet: 0.15,\n                    preDelay: 0,\n                    decay: 1,\n                },\n            ],\n            effects: [],\n        },\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [\n                {\n                    id: 'b32a0c32-2e3f-45f0-b4fe-c89f28fe50a1',\n                    type: 'reverb',\n                    wet: 0.4,\n                    preDelay: 0,\n                    decay: 0.6,\n                },\n            ],\n            effects: [],\n        },\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [\n                {\n                    id: 'be1264d2-c1ff-4f5c-b259-7e37e7bff7fb',\n                    type: 'reverb',\n                    wet: 0.5,\n                    preDelay: 0,\n                    decay: 3,\n                },\n            ],\n            effects: [],\n        },\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [],\n            effects: [],\n        },\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [],\n            effects: [],\n        },\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [],\n            effects: [],\n        },\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [],\n            effects: [],\n        },\n        {\n            channel: new Tone.Channel(),\n            sources: [],\n            effectConfigs: [],\n            effects: [],\n        },\n    ],\n    updateChannel: (channel: Channel, channelIndex: number) => {\n        const master = get().master\n\n        let destination: Tone.ToneAudioNode = master\n        const effects: Effect[] = []\n        channel.effectConfigs.forEach((effect) => {\n            if (effect.type === 'reverb') {\n                console.log(\n                    `[effect] reverb on channel ${channelIndex} (decay: ${effect.decay}, preDelay: ${effect.preDelay},  wet: ${effect.wet})`\n                )\n\n                const reverb = new Tone.Reverb(effect.decay)\n                reverb.preDelay = effect.preDelay\n                reverb.wet.value = effect.wet\n\n                reverb.connect(destination)\n                destination = reverb\n\n                const appliedEffect: Effect = { ...effect, instance: reverb }\n                effects.push(appliedEffect)\n            } else if (effect.type === 'distortion') {\n                console.log(\n                    `[effect] distortion on channel ${channelIndex} (distortion: ${effect.distortion},  wet: ${effect.wet})`\n                )\n\n                const distortion = new Tone.Distortion(effect.distortion)\n                distortion.wet.value = effect.wet\n\n                distortion.connect(destination)\n                destination = distortion\n\n                const appliedEffect: Effect = { ...effect, instance: distortion }\n                effects.push(appliedEffect)\n            }\n        })\n\n        console.log(`[connected] channel ${channelIndex}`)\n        channel.channel.connect(destination)\n\n        set({\n            channels: get().channels.map((channel, index) => {\n                if (index !== channelIndex) return channel\n\n                return { ...channel, effects }\n            }),\n            allEffects: [...get().allEffects, ...effects],\n        })\n    },\n    allEffects: [],\n    openedEffects: [],\n    openEffect: (effectId: string) => {\n        // no loaded project\n        const project = get().project\n        if (!project) return\n\n        // effect already open\n        if (get().openedEffects.find((e) => e.id === effectId)) return\n\n        // effect not found\n        const effect = get().allEffects.find((e) => e.id === effectId)\n        if (!effect) return\n\n        set({\n            openedEffects: [...get().openedEffects, effect],\n        })\n    },\n    closeEffect: (effectId: string) => {\n        set({\n            openedEffects: get().openedEffects.filter((effect) => effect.id !== effectId),\n        })\n    },\n}))\n","import { ChangeEvent, useCallback } from 'react'\nimport styled from 'styled-components/macro'\nimport { FiPlus, FiMinus } from 'react-icons/fi'\nimport { HSpacer } from './Spacer'\nimport { Select } from './controls/Select'\nimport { RoundIconButton } from './controls/RoundIconButton'\nimport { LCDScreen, LCDScreenHighlightedText } from './LCDScreen'\nimport { useAppStore } from '../useApp'\n\nconst genresBpm: [string, number][] = [\n    ['Reggae/R&B', 60],\n    ['Down-tempo', 70],\n    ['Hip-hop', 85],\n    ['Chill-out', 90],\n    ['Pop/Metal', 100],\n    ['Rock', 110],\n    ['House', 118],\n    ['Jazz & Funk/Techno', 120],\n    ['Trance', 130],\n    ['Dubstep/Trap', 140],\n    ['Jungle', 155],\n    ['Drum and Bass', 165],\n]\n\nexport const BpmControl = () => {\n    const bpm = useAppStore((state) => state.bpm)\n    const setBpm = useAppStore((state) => state.setBpm)\n\n    const handleMinus = useCallback(() => {\n        setBpm(Math.max(1, bpm - 1))\n    }, [bpm, setBpm])\n\n    const handlePlus = useCallback(() => {\n        setBpm(Math.min(522, bpm + 1))\n    }, [bpm, setBpm])\n\n    const handleSelect = useCallback(\n        (event: ChangeEvent<HTMLSelectElement>) => {\n            if (event.target.value === '') return\n            setBpm(Number(event.target.value))\n        },\n        [setBpm]\n    )\n\n    const currentGenre = genresBpm.find(([_, genreBpm]) => genreBpm === bpm)\n\n    return (\n        <Container>\n            <RoundIconButton onClick={handleMinus}>\n                <FiMinus />\n            </RoundIconButton>\n            <HSpacer size=\"small\" />\n            <Screen>\n                BPM <Current>{bpm.toFixed(2).padStart(6, ' ')}</Current>\n            </Screen>\n            <HSpacer size=\"small\" />\n            <RoundIconButton onClick={handlePlus}>\n                <FiPlus />\n            </RoundIconButton>\n            <HSpacer size=\"small\" />\n            <Select onChange={handleSelect} value={currentGenre ? currentGenre[1] : ''}>\n                <option value=\"\">-----</option>\n                {genresBpm.map(([genre, genreBpm]) => (\n                    <option key={genre} value={genreBpm}>\n                        {genre} {genreBpm}BPM\n                    </option>\n                ))}\n            </Select>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst Screen = styled(LCDScreen)`\n    display: flex;\n    align-items: center;\n    height: 28px;\n    padding: 0 12px;\n`\n\nconst Current = styled(LCDScreenHighlightedText)`\n    margin-left: 1ch;\n    white-space: pre;\n`\n","import { darkTheme } from './darkTheme'\nimport { lightTheme } from './lightTheme'\n\nexport const themes = [darkTheme, lightTheme] as const\n","import { DefaultTheme } from 'styled-components'\n\nexport const lightTheme: DefaultTheme = {\n    id: 'light',\n    name: 'Light Theme',\n    typography: {\n        headingFont: `'Montserrat', sans-serif`,\n        monospacedFont: `'IBM Plex Mono', monospace`,\n    },\n    colors: {\n        background: '#b8bfbe',\n        text: '#444444',\n        textLight: '#888888',\n        accent: '#358795',\n        wood: '#aa9c8a',\n        enclosureBorder: '#b4bbbb',\n        enclosureBackground: '#c1c7c7',\n        lcdBackground: '#adab9d',\n        lcdBorder: '#89887b',\n        lcdText: '#5f5f55',\n        lcdHighlightText: '#36362f',\n    },\n}\n","import { ChangeEvent, useCallback } from 'react'\nimport { useAppStore } from '../../useApp'\nimport { Select } from '../controls/Select'\nimport { themes } from './themes'\n\nexport const ThemeSelector = () => {\n    const currentTheme = useAppStore((state) => state.theme)\n    const setTheme = useAppStore((state) => state.setTheme)\n    const handleSelect = useCallback(\n        (event: ChangeEvent<HTMLSelectElement>) => {\n            const newTheme = themes.find((t) => t.id === event.target.value)\n            if (newTheme !== undefined) {\n                setTheme(newTheme)\n            }\n        },\n        [setTheme]\n    )\n\n    return (\n        <Select value={currentTheme.id} onChange={handleSelect}>\n            {themes.map((theme) => (\n                <option key={theme.id} value={theme.id}>\n                    {theme.name}\n                </option>\n            ))}\n        </Select>\n    )\n}\n","import styled from 'styled-components/macro'\nimport { HSpacer } from './Spacer'\nimport { BpmControl } from './BpmControl'\nimport { ThemeSelector } from './theme/ThemeSelector'\n\nexport const AppHeader = () => {\n    return (\n        <Container>\n            <AppName>\n                <span>Beats</span>\n                <span>Brewer</span>\n            </AppName>\n            <Controls>\n                <BpmControl />\n                <HSpacer />\n                <ThemeSelector />\n            </Controls>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 200px auto;\n    align-items: center;\n    grid-column-start: 1;\n    grid-column-end: 3;\n    padding: 0 12px;\n    background-color: ${(props) => props.theme.colors.enclosureBackground};\n    border-bottom: 1px solid ${(props) => props.theme.colors.enclosureBorder};\n`\n\nconst AppName = styled.div`\n    font-family: ${(props) => props.theme.typography.headingFont};\n    text-transform: uppercase;\n    font-size: 14px;\n    color: ${(props) => props.theme.colors.textLight};\n\n    & > span:last-child {\n        color: ${(props) => props.theme.colors.accent};\n        margin-left: 2px;\n    }\n`\n\nconst Controls = styled.div`\n    display: flex;\n    align-items: center;\n`\n","import { v4 as uuidV4 } from 'uuid'\nimport { Sample } from '../project/definitions'\n\n// console.log(uuidV4())\n\nexport const tr808BassDrum1 = require('../audio/tr808/tr808_bass_drum_001.wav').default\nexport const tr808BassDrum2 = require('../audio/tr808/tr808_bass_drum_002.wav').default\nexport const tr808Snare1 = require('../audio/tr808/tr808_snare_001.wav').default\nexport const tr808Snare2 = require('../audio/tr808/tr808_snare_002.wav').default\nexport const tr808Clap1 = require('../audio/tr808/tr808_clap_001.wav').default\nexport const tr808Clap2 = require('../audio/tr808/tr808_clap_002.wav').default\nexport const tr808Rimshot1 = require('../audio/tr808/tr808_rimshot_001.wav').default\nexport const tr808Rimshot2 = require('../audio/tr808/tr808_rimshot_002.wav').default\nexport const tr808HiHatOpen1 = require('../audio/tr808/tr808_hihat_open_001.wav').default\nexport const tr808HiHatOpen2 = require('../audio/tr808/tr808_hihat_open_002.wav').default\nexport const tr808HiHatClosed1 = require('../audio/tr808/tr808_hihat_closed_001.wav').default\nexport const tr808HiHatClosed2 = require('../audio/tr808/tr808_hihat_closed_002.wav').default\nexport const tr808CongasLow1 = require('../audio/tr808/tr808_congas_low_001.wav').default\nexport const tr808CongasLow2 = require('../audio/tr808/tr808_congas_low_002.wav').default\nexport const tr808CongasHigh1 = require('../audio/tr808/tr808_congas_high_001.wav').default\nexport const tr808CongasHigh2 = require('../audio/tr808/tr808_congas_high_002.wav').default\n\nconst kickColor = '#49c19b'\nconst snareColor = '#6a9e6a'\nconst clapColor = '#d0aa4c'\nconst rimshotColor = '#b67892'\nconst hiHatColor = '#95758c'\nconst congasColor = '#743c29'\n\nexport const samples: Sample[] = [\n    {\n        id: uuidV4(),\n        name: 'TR-808 Bass Drum 1',\n        color: kickColor,\n        audioFile: tr808BassDrum1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Bass Drum 2',\n        color: kickColor,\n        audioFile: tr808BassDrum2,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Snare 1',\n        color: snareColor,\n        audioFile: tr808Snare1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Snare 2',\n        color: snareColor,\n        audioFile: tr808Snare2,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Clap 1',\n        color: clapColor,\n        audioFile: tr808Clap1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Clap 2',\n        color: clapColor,\n        audioFile: tr808Clap2,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Rimshot 1',\n        color: rimshotColor,\n        audioFile: tr808Rimshot1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Rimshot 2',\n        color: rimshotColor,\n        audioFile: tr808Rimshot2,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 HiHat Open 1',\n        color: hiHatColor,\n        audioFile: tr808HiHatOpen1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 HiHat Open 2',\n        color: hiHatColor,\n        audioFile: tr808HiHatOpen2,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 HiHat Closed 1',\n        color: hiHatColor,\n        audioFile: tr808HiHatClosed1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 HiHat Closed 2',\n        color: hiHatColor,\n        audioFile: tr808HiHatClosed2,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Congas Low 1',\n        color: congasColor,\n        audioFile: tr808CongasLow1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Congas Low 2',\n        color: congasColor,\n        audioFile: tr808CongasLow2,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Congas High 1',\n        color: congasColor,\n        audioFile: tr808CongasHigh1,\n    },\n    {\n        id: uuidV4(),\n        name: 'TR-808 Congas High 2',\n        color: congasColor,\n        audioFile: tr808CongasHigh2,\n    },\n]\n\nexport const sampleByName = (sampleName: string): Sample => {\n    const sample = samples.find((s) => s.name === sampleName)\n    if (sample === undefined) {\n        throw new Error(`no sample found for name: ${sampleName}`)\n    }\n\n    return sample\n}\n","import { demoProject } from './demoProject'\n\nexport const demoProjects = [demoProject]\n","import { ProjectData, SequencerPatternData } from '../project/definitions'\nimport { sampleByName } from './samples'\n\nconst patternA: SequencerPatternData = {\n    type: 'sequencer',\n    id: 'fbb33684-57cd-46b2-95a7-3900a53bb393',\n    name: 'Drums 1',\n    color: '#3aa878',\n    tracks: [\n        {\n            ...sampleByName('TR-808 Bass Drum 1'),\n            id: 'c4893926-5725-40e4-a6b6-94addeb64ab8',\n            channel: 0,\n            isMuted: false,\n            steps: [\n                1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n                1, 0, 1, 0,\n            ],\n        },\n        {\n            ...sampleByName('TR-808 Snare 1'),\n            id: '9e78f23f-f0ed-4a80-8e52-57c8a8735746',\n            channel: 1,\n            isMuted: false,\n            steps: [\n                0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n                0, 0, 0, 0,\n            ],\n        },\n        {\n            ...sampleByName('TR-808 Clap 1'),\n            id: '9476ae21-c02f-4098-a93e-c6a4cb9b0c42',\n            channel: 1,\n            isMuted: false,\n            steps: [\n                0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n                1, 0, 1, 1,\n            ],\n        },\n        {\n            ...sampleByName('TR-808 Rimshot 1'),\n            id: '9d6848d9-fcaa-45d8-a432-f92c86b862bb',\n            channel: 0,\n            isMuted: false,\n            steps: [\n                0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n                1, 1, 1, 1,\n            ],\n        },\n        {\n            ...sampleByName('TR-808 HiHat Closed 1'),\n            id: '88c22c47-645a-4749-9a19-d49b0388c0e5',\n            channel: 0,\n            isMuted: false,\n            steps: [\n                1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n                1, 0, 1, 1,\n            ],\n        },\n        {\n            ...sampleByName('TR-808 Congas Low 1'),\n            id: '73978bee-3282-46ec-881d-8713028e2569',\n            channel: 2,\n            isMuted: false,\n            steps: [\n                1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n                0, 1, 0, 0,\n            ],\n        },\n        {\n            ...sampleByName('TR-808 Congas High 1'),\n            id: 'ce7c3273-0843-4fa2-95e5-9cad5b1bbee3',\n            channel: 2,\n            isMuted: false,\n            steps: [\n                0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0,\n                0, 0, 1, 1,\n            ],\n        },\n    ],\n}\n\nexport const demoProject: ProjectData = {\n    id: '11af1d60-23fc-4b53-b1b1-b10ce69ad292',\n    name: 'Demo Project',\n    bpm: 130,\n    patterns: [patternA],\n}\n","import { v4 as uuidV4 } from 'uuid'\nimport { DrumKit } from '../project/definitions'\nimport { sampleByName } from './samples'\n\nexport const drumKits: DrumKit[] = [\n    {\n        id: uuidV4(),\n        name: 'Drum Kit TR-808 1',\n        samples: [\n            sampleByName('TR-808 Bass Drum 1'),\n            sampleByName('TR-808 Snare 1'),\n            sampleByName('TR-808 Clap 1'),\n            sampleByName('TR-808 Rimshot 1'),\n            sampleByName('TR-808 HiHat Open 1'),\n            sampleByName('TR-808 HiHat Closed 1'),\n            sampleByName('TR-808 Congas Low 1'),\n            sampleByName('TR-808 Congas High 1'),\n        ],\n    },\n    {\n        id: uuidV4(),\n        name: 'Drum Kit TR-808 2',\n        samples: [\n            sampleByName('TR-808 Bass Drum 2'),\n            sampleByName('TR-808 Snare 2'),\n            sampleByName('TR-808 Clap 2'),\n            sampleByName('TR-808 Rimshot 2'),\n            sampleByName('TR-808 HiHat Open 2'),\n            sampleByName('TR-808 HiHat Closed 2'),\n            sampleByName('TR-808 Congas Low 2'),\n            sampleByName('TR-808 Congas High 2'),\n        ],\n    },\n]\n","import { PropsWithChildren, ReactNode, useCallback, useState } from 'react'\nimport styled from 'styled-components/macro'\n\ninterface ExplorerFolderProps {\n    title: ReactNode\n    defaultIsOpen?: boolean\n}\n\nexport const ExplorerFolder = ({\n    title,\n    defaultIsOpen = false,\n    children,\n}: PropsWithChildren<ExplorerFolderProps>) => {\n    const [isOpen, setIsOpen] = useState(defaultIsOpen)\n    const toggle = useCallback(() => {\n        setIsOpen((previous) => !previous)\n    }, [setIsOpen])\n\n    return (\n        <>\n            <Header onClick={toggle}>{title}</Header>\n            {isOpen && children}\n        </>\n    )\n}\n\nconst Header = styled.div`\n    cursor: pointer;\n`\n","import styled from 'styled-components/macro'\nimport { darken } from 'polished'\nimport { BiBox } from 'react-icons/bi'\nimport { FaDrum, FaWaveSquare } from 'react-icons/fa'\n// import { CgPiano } from 'react-icons/cg'\nimport { BsGrid3X2GapFill } from 'react-icons/bs'\nimport { demoProjects } from '../library/demoProjects'\n// import { SYNTH_TYPES } from '../synths/definitions'\nimport { drumKits } from '../library/drumKits'\nimport { samples } from '../library/samples'\nimport { useAppStore } from '../useApp'\nimport { ExplorerFolder } from './ExplorerFolder'\n\nexport const Explorer = () => {\n    const project = useAppStore((state) => state.project)\n    // const createEmptyProject = useAppStore((state) => state.createEmptyProject)\n    const loadProject = useAppStore((state) => state.loadProject)\n    const openPattern = useAppStore((state) => state.openPattern)\n\n    return (\n        <Container>\n            {/*\n            <Item onClick={createEmptyProject}>New Empty Project</Item>\n            */}\n            {project && (\n                <>\n                    <SubTitle>{project.name}</SubTitle>\n                    <ExplorerFolder\n                        defaultIsOpen\n                        title={\n                            <SectionTitle>\n                                <BsGrid3X2GapFill /> Patterns {project.patterns.length}\n                            </SectionTitle>\n                        }\n                    >\n                        {project.patterns.map((pattern) => {\n                            return (\n                                <Item\n                                    key={pattern.id}\n                                    onClick={() => {\n                                        openPattern(pattern.id)\n                                    }}\n                                >\n                                    <BsGrid3X2GapFill /> {pattern.name}\n                                </Item>\n                            )\n                        })}\n                    </ExplorerFolder>\n                </>\n            )}\n            <SubTitle>Library</SubTitle>\n            <ExplorerFolder\n                defaultIsOpen\n                title={\n                    <SectionTitle>\n                        <BiBox /> Demo Projects {demoProjects.length}\n                    </SectionTitle>\n                }\n            >\n                {demoProjects.map((project) => (\n                    <Item\n                        key={project.name}\n                        onClick={() => {\n                            loadProject(project)\n                        }}\n                    >\n                        <BiBox /> {project.name}\n                    </Item>\n                ))}\n            </ExplorerFolder>\n            {/*\n            <SectionTitle>Instruments</SectionTitle>\n            <ExplorerFolder\n                title={\n                    <SectionTitle>\n                        <CgPiano /> Synths {SYNTH_TYPES.length}\n                    </SectionTitle>\n                }\n            >\n                {SYNTH_TYPES.map((synthType) => (\n                    <Item key={synthType}>\n                        <CgPiano /> {synthType}\n                    </Item>\n                ))}\n            </ExplorerFolder>\n            */}\n            <ExplorerFolder\n                title={\n                    <SectionTitle>\n                        <FaDrum /> Drum Kits {drumKits.length}\n                    </SectionTitle>\n                }\n            >\n                {drumKits.map((drumKit) => (\n                    <Item key={drumKit.id}>\n                        <FaDrum /> {drumKit.name}\n                    </Item>\n                ))}\n            </ExplorerFolder>\n            <ExplorerFolder\n                title={\n                    <SectionTitle>\n                        <FaWaveSquare /> Samples {samples.length}\n                    </SectionTitle>\n                }\n            >\n                {samples.map((sample) => (\n                    <Item key={sample.id}>\n                        <FaWaveSquare /> {sample.name}\n                    </Item>\n                ))}\n            </ExplorerFolder>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    background-color: ${(props) => props.theme.colors.enclosureBackground};\n    color: ${(props) => props.theme.colors.text};\n    border-right: 1px solid ${(props) => props.theme.colors.enclosureBorder};\n`\n\nconst SubTitle = styled.h2`\n    font-family: ${(props) => props.theme.typography.headingFont};\n    background-color: ${(props) => darken(0.03, props.theme.colors.enclosureBackground)};\n    font-size: 13px;\n    margin: 0;\n    padding: 7px 12px;\n    color: ${(props) => props.theme.colors.accent};\n`\n\nconst SectionTitle = styled.h3`\n    display: flex;\n    align-items: center;\n    color: ${(props) => props.theme.colors.accent};\n    font-size: 12px;\n    margin: 0;\n    padding: 7px 12px;\n\n    svg:first-child {\n        margin-right: 1ch;\n    }\n`\n\nconst Item = styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 11px;\n    margin: 0;\n    padding: 5px 12px;\n    cursor: pointer;\n    // border-bottom: 1px solid ${(props) => darken(0.06, props.theme.colors.background)};\n\n    svg:first-child {\n        margin-right: 1ch;\n    }\n\n    &:hover {\n        background-color: ${(props) => darken(0.03, props.theme.colors.enclosureBackground)};\n    }\n`\n","import styled from 'styled-components'\n\nexport const Desk = styled.div`\n    color: ${(props) => props.theme.colors.text};\n    padding: 6px;\n`\n","import { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { darken, lighten, rgba } from 'polished'\n\nexport const Enclosure = ({ children }: PropsWithChildren<{}>) => {\n    return (\n        <Container>\n            <Side />\n            <Top />\n            <Body>{children}</Body>\n            <Bottom />\n            <Side />\n        </Container>\n    )\n}\n\nexport const Container = styled.div`\n    display: grid;\n    grid-template-columns: 12px auto 12px;\n    grid-template-rows: 7px auto 14px;\n    border-radius: 3px;\n    background-color: ${(props) => props.theme.colors.enclosureBackground};\n    box-shadow: 0 1px 2px ${(props) => rgba(darken(0.2, props.theme.colors.background), 0.15)},\n        1px 2px 5px ${(props) => rgba(darken(0.2, props.theme.colors.background), 0.15)},\n        3px 6px 12px ${(props) => rgba(darken(0.2, props.theme.colors.background), 0.25)};\n`\n\nconst Side = styled.div`\n    grid-row-start: 1;\n    grid-row-end: 4;\n    background-color: ${(props) => props.theme.colors.wood};\n    background: linear-gradient(\n        180deg,\n        ${(props) => lighten(0.01, props.theme.colors.wood)},\n        ${(props) => props.theme.colors.wood}\n    );\n    box-shadow: inset -1px -1px 0 ${(props) => darken(0.03, props.theme.colors.wood)},\n        inset 1px 1px 0 ${(props) => lighten(0.06, props.theme.colors.wood)},\n        inset 0 11px 0 ${(props) => lighten(0.04, props.theme.colors.wood)},\n        inset 0 12px 0 ${(props) => lighten(0.06, props.theme.colors.wood)},\n        inset 0 -23px 0 ${(props) => darken(0.02, props.theme.colors.wood)},\n        inset 0 -24px 0 ${(props) => darken(0.04, props.theme.colors.wood)};\n\n    &:first-child {\n        border-radius: 3px 0 0 3px;\n        grid-column-start: 1;\n        grid-column-end: 2;\n    }\n\n    &:last-child {\n        border-radius: 0 3px 3px 0;\n        grid-column-start: 3;\n        grid-column-end: 4;\n    }\n`\n\nconst Top = styled.div`\n    background-color: ${(props) => lighten(0.03, props.theme.colors.enclosureBackground)};\n    box-shadow: inset 4px 0 0\n            ${(props) => rgba(darken(0.2, props.theme.colors.enclosureBackground), 0.05)},\n        inset -2px 0 0 ${(props) => rgba(darken(0.2, props.theme.colors.enclosureBackground), 0.1)},\n        inset 0 1px 0 ${(props) => lighten(0.08, props.theme.colors.enclosureBackground)},\n        inset 0 -1px 0 ${(props) => darken(0.03, props.theme.colors.enclosureBackground)};\n`\n\nconst Bottom = styled.div`\n    background-color: ${(props) => darken(0.02, props.theme.colors.enclosureBackground)};\n    box-shadow: inset 4px 0 0\n            ${(props) => rgba(darken(0.2, props.theme.colors.enclosureBackground), 0.15)},\n        inset -2px 0 0 ${(props) => rgba(darken(0.2, props.theme.colors.enclosureBackground), 0.1)},\n        inset 0 1px 0 ${(props) => lighten(0.02, props.theme.colors.enclosureBackground)},\n        inset 0 -1px 0 ${(props) => darken(0.05, props.theme.colors.enclosureBackground)};\n`\n\nconst Body = styled.div`\n    padding: 9px 12px;\n    box-shadow: inset 4px 0 0\n            ${(props) => rgba(darken(0.2, props.theme.colors.enclosureBackground), 0.1)},\n        inset -2px 0 0 ${(props) => rgba(darken(0.2, props.theme.colors.enclosureBackground), 0.1)},\n        inset 0 1px 0 ${(props) => lighten(0.05, props.theme.colors.enclosureBackground)},\n        inset 0 -1px 0 ${(props) => darken(0.04, props.theme.colors.enclosureBackground)};\n`\n","import styled from 'styled-components'\n\nexport const ComponentHeader = styled.div`\n    display: flex;\n    align-items: center;\n`\n","import styled from 'styled-components'\n\nexport const ComponentName = styled.div`\n    font-family: ${(props) => props.theme.typography.headingFont};\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 11px;\n    color: #666;\n`\n\nexport const ComponentNameHighlight = styled.span`\n    color: ${(props) => props.theme.colors.accent};\n`\n","import styled from 'styled-components'\nimport { FiPlus, FiMinus } from 'react-icons/fi'\nimport { HSpacer } from '../ui/Spacer'\nimport { LCDScreen, LCDScreenHighlightedText } from '../ui/LCDScreen'\nimport { RoundIconButton } from '../ui/controls/RoundIconButton'\nimport { useCallback } from 'react'\n\ninterface SequencerBarsProps {\n    bars: number\n    setBars: (bars: number) => void\n}\n\nexport const SequencerBars = ({ bars, setBars }: SequencerBarsProps) => {\n    const handleMinus = useCallback(() => {\n        setBars(Math.max(1, bars - 1))\n    }, [setBars, bars])\n\n    const handlePlus = useCallback(() => {\n        setBars(bars + 1)\n    }, [setBars, bars])\n\n    return (\n        <Container>\n            <RoundIconButton onClick={handleMinus}>\n                <FiMinus />\n            </RoundIconButton>\n            <HSpacer size=\"xsmall\" />\n            <Screen>\n                Bars <Current>{bars}</Current>\n            </Screen>\n            <HSpacer size=\"xsmall\" />\n            <RoundIconButton onClick={handlePlus}>\n                <FiPlus />\n            </RoundIconButton>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst Screen = styled(LCDScreen)`\n    padding: 0 12px;\n    display: flex;\n    align-items: center;\n    height: 28px;\n`\n\nconst Current = styled(LCDScreenHighlightedText)`\n    margin-left: 1ch;\n`\n","import styled from 'styled-components/macro'\nimport { HardwareButton } from './HardwareButton'\n\nexport const SquareIconButton = styled(HardwareButton)<{\n    isPressed?: boolean\n    isInactive?: boolean\n    hasNext?: boolean\n    hasPrevious?: boolean\n}>`\n    padding: 0;\n    font-size: 14px;\n    width: 26px;\n    height: 26px;\n`\n","import { FiPlay, FiSquare } from 'react-icons/fi'\nimport { SquareIconButton } from './SquareIconButton'\n\ninterface PlayerControlsProps {\n    isPlaying: boolean\n    play: () => void\n    stop: () => void\n}\n\nexport const PlayerControls = ({ isPlaying, play, stop }: PlayerControlsProps) => {\n    return (\n        <div>\n            <SquareIconButton hasNext isPressed={isPlaying} onClick={play}>\n                <FiPlay />\n            </SquareIconButton>\n            <SquareIconButton hasPrevious isPressed={!isPlaying} onClick={stop}>\n                <FiSquare />\n            </SquareIconButton>\n        </div>\n    )\n}\n","import { FiCopy } from 'react-icons/fi'\nimport { HSpacer } from '../ui/Spacer'\nimport { ComponentHeader } from '../ui/ComponentHeader'\nimport { ComponentName, ComponentNameHighlight } from '../ui/ComponentName'\nimport { SequencerBars } from './SequencerBars'\nimport { PlayerControls } from '../ui/controls/PlayerControls'\nimport { HardwareButton } from '../ui/controls/HardwareButton'\nimport { SequencerPattern } from '../project/definitions'\n\ninterface SequencerHeaderProps {\n    pattern: SequencerPattern\n    bars: number\n    setBars: (bars: number) => void\n    doubleBars: () => void\n    isPlaying: boolean\n    play: () => void\n    stop: () => void\n}\n\nexport const SequencerHeader = ({\n    pattern,\n    bars,\n    setBars,\n    doubleBars,\n    isPlaying,\n    play,\n    stop,\n}: SequencerHeaderProps) => {\n    return (\n        <ComponentHeader>\n            <ComponentName>\n                <ComponentNameHighlight>{pattern.name}</ComponentNameHighlight>\n            </ComponentName>\n            <HSpacer />\n            <PlayerControls isPlaying={isPlaying} play={play} stop={stop} />\n            <HSpacer />\n            <SequencerBars bars={bars} setBars={setBars} />\n            <HSpacer size=\"small\" />\n            <HardwareButton onClick={doubleBars}>\n                <FiCopy />\n                <HSpacer size=\"xsmall\" />\n                double\n            </HardwareButton>\n        </ComponentHeader>\n    )\n}\n","import styled from 'styled-components/macro'\nimport { FiChevronUp, FiChevronDown } from 'react-icons/fi'\n// import { useAppStore } from '../useApp'\nimport { LCDScreen, LCDScreenHighlightedText } from '../ui/LCDScreen'\nimport { useCallback } from 'react'\n\ninterface MixerChannelSelectorProps {\n    value: number\n}\n\nexport const MixerChannelSelector = ({ value }: MixerChannelSelectorProps) => {\n    // const channels = useAppStore((state) => state.channels)\n\n    const handleUp = useCallback(() => {\n        console.log(value + 1)\n    }, [value])\n\n    const handleDown = useCallback(() => {\n        console.log(value - 1)\n    }, [value])\n\n    return (\n        <Container>\n            <Screen>\n                <LCDScreenHighlightedText>{value + 1}</LCDScreenHighlightedText>\n            </Screen>\n            <Controls>\n                <Button onClick={handleUp}>\n                    <FiChevronUp />\n                </Button>\n                <Button onClick={handleDown}>\n                    <FiChevronDown />\n                </Button>\n            </Controls>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst Screen = styled(LCDScreen)`\n    width: 24px;\n    height: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 2px;\n`\n\nconst Controls = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 12px;\n    height: 24px;\n`\n\nconst Button = styled.span`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 12px;\n    color: ${(props) => props.theme.colors.textLight};\n\n    &:hover {\n        color: ${(props) => props.theme.colors.text};\n    }\n`\n","import { useCallback } from 'react'\nimport styled from 'styled-components/macro'\nimport { darken } from 'polished'\nimport { FiVolume, FiVolumeX } from 'react-icons/fi'\nimport { TrackWithPlayer } from './useStepSequencer'\nimport { MixerChannelSelector } from '../mixer/MixerChannelSelector'\n\ninterface TrackHeadingProps {\n    track: TrackWithPlayer\n    toggleTrack: (sampleId: string) => void\n}\n\nexport const TrackHeading = ({ track, toggleTrack }: TrackHeadingProps) => {\n    const handleToggle = useCallback(() => {\n        toggleTrack(track.id)\n    }, [track.id, toggleTrack])\n\n    return (\n        <TrackHeadingContainer color={track.color}>\n            <TrackName>{track.name}</TrackName>\n            <MixerChannelSelector value={track.channel} />\n            <MuteIcon isMuted={track.isMuted} onClick={handleToggle}>\n                {track.isMuted && <FiVolumeX />}\n                {!track.isMuted && <FiVolume />}\n            </MuteIcon>\n        </TrackHeadingContainer>\n    )\n}\n\nconst TrackHeadingContainer = styled.div<{\n    color: string\n}>`\n    display: grid;\n    grid-template-columns: auto 36px 24px;\n    grid-column-gap: 5px;\n    position: relative;\n    align-items: center;\n    font-family: ${(props) => props.theme.typography.monospacedFont};\n    font-size: 12px;\n    background-color: ${(props) => darken(0.03, props.theme.colors.enclosureBackground)};\n    height: 32px;\n    border-radius: 2px;\n    padding: 0 6px 0 16px;\n    user-select: none;\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.textLight};\n\n    &:before {\n        content: '';\n        position: absolute;\n        background-color: ${(props) => props.color};\n        top: 0;\n        left: 0;\n        width: 5px;\n        height: 100%;\n        border-radius: 2px 0 0 2px;\n        opacity: 0.6;\n    }\n\n    &:hover {\n        &:before {\n            opacity: 1;\n        }\n    }\n`\n\nconst TrackName = styled.div`\n    font-family: ${(props) => props.theme.typography.headingFont};\n    text-transform: uppercase;\n    font-size: 10px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n`\n\nconst MuteIcon = styled.div<{\n    isMuted: boolean\n}>`\n    font-size: 16px;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${(props) => props.theme.colors.textLight};\n\n    &:hover {\n        color: ${(props) => props.theme.colors.text};\n    }\n`\n","import styled from 'styled-components/macro'\nimport { useMemo } from 'react'\n\ninterface SequencerTimelineProps {\n    steps: number\n    current: number\n}\n\nexport const SequencerTimeline = ({ steps, current }: SequencerTimelineProps) => {\n    const stepIndexes = useMemo(() => {\n        return Array.from({ length: steps }).map((_, index) => index)\n    }, [steps])\n\n    return (\n        <Container steps={steps}>\n            {stepIndexes.map((index) => {\n                return <Step key={index} isCurrent={index === current} />\n            })}\n        </Container>\n    )\n}\n\nconst Container = styled.div<{\n    steps: number\n}>`\n    height: 3px;\n    margin-bottom: 7px;\n    display: grid;\n    grid-template-columns: repeat(${(props) => props.steps}, 14px);\n    grid-column-gap: 4px;\n`\n\nconst Step = styled.span<{\n    isCurrent: boolean\n}>`\n    height: 3px;\n    background-color: ${(props) => props.theme.colors.accent};\n    opacity: ${(props) => (props.isCurrent ? 1 : 0.3)};\n    box-shadow: ${(props) => {\n        if (!props.isCurrent) return 'none'\n        return `0 0 5px ${props.theme.colors.accent}`\n    }};\n`\n","import { useCallback } from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { darken, lighten, rgba } from 'polished'\nimport { TrackWithPlayer } from './useStepSequencer'\n\ninterface TrackStepsProps {\n    track: TrackWithPlayer\n    currentStep: number\n    toggleStep: (sampleId: string, index: number) => void\n}\n\nexport const TrackSteps = ({ track, currentStep, toggleStep }: TrackStepsProps) => {\n    const handleToggle = useCallback(\n        (index: number) => {\n            toggleStep(track.id, index)\n        },\n        [toggleStep, track.id]\n    )\n\n    return (\n        <Grid steps={track.steps.length}>\n            {track.steps.map((step, index) => {\n                return (\n                    <Step\n                        key={index}\n                        index={index}\n                        color={track.color}\n                        isActive={step === 1}\n                        isPlaying={step === 1 && currentStep === index}\n                        onToggle={handleToggle}\n                        isMuted={track.isMuted}\n                    />\n                )\n            })}\n        </Grid>\n    )\n}\n\ninterface StepProps {\n    index: number\n    color: string\n    isActive: boolean\n    isPlaying: boolean\n    onToggle: (index: number) => void\n    isMuted: boolean\n}\n\nconst Step = ({ index, color, isActive, isPlaying, onToggle, isMuted }: StepProps) => {\n    const handleToggle = useCallback(() => {\n        onToggle(index)\n    }, [onToggle, index])\n\n    return (\n        <StepElement\n            color={color}\n            isActive={isActive}\n            isPlaying={isPlaying}\n            isOdd={index % 8 >= 4}\n            onClick={handleToggle}\n            isMuted={isMuted}\n        />\n    )\n}\n\nconst Grid = styled.div<{\n    steps: number\n}>`\n    display: grid;\n    align-items: center;\n    grid-template-columns: repeat(${(props) => props.steps}, 14px);\n    grid-column-gap: 4px;\n    height: 32px;\n`\n\nconst StepElement = styled.div<{\n    color: string\n    isActive: boolean\n    isPlaying: boolean\n    isOdd: boolean\n    isMuted: boolean\n}>`\n    position: relative;\n    border-radius: 2px;\n    height: 24px;\n    cursor: pointer;\n    opacity: ${(props) => (props.isMuted ? 0.5 : 1)};\n\n    &:after {\n        content: '';\n        background-color: ${(props) => props.theme.colors.enclosureBackground};\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 4px;\n        height: 4px;\n        margin-left: -2px;\n        margin-top: -2px;\n        border-radius: 2px;\n        transform: translate3d(0, 5px, 0);\n        opacity: 0;\n        transition: transform 400ms, opacity 400ms;\n    }\n\n    ${({ theme, color, isActive, isPlaying, isOdd }) => {\n        if (isActive) {\n            if (isPlaying) {\n                return css`\n                    background-color: ${lighten(0.15, color)};\n                    box-shadow: inset 0 -1px 0 ${color}, inset 0 1px 0 ${lighten(0.15, color)},\n                        0 0 3px 2px ${rgba(color, 0.35)};\n\n                    &:after {\n                        transform: translate3d(0, -5px, 0);\n                        opacity: 1;\n                    }\n                `\n            }\n\n            return css`\n                background-color: ${color};\n                box-shadow: inset 0 -1px 0 ${darken(0.2, color)},\n                    0 1px 3px ${rgba(darken(0.3, theme.colors.enclosureBackground), 0.66)},\n                    inset 0 1px 0 ${lighten(0.15, color)};\n\n                &:after {\n                    transform: translate3d(0, -5px, 0);\n                    opacity: 1;\n                }\n            `\n        }\n\n        if (isOdd) {\n            return css`\n                background-color: ${lighten(0.05, theme.colors.enclosureBackground)};\n                border: 1px solid ${darken(0.03, theme.colors.enclosureBackground)};\n\n                &:hover {\n                    background-color: ${rgba(color, 0.8)};\n                }\n            `\n        }\n\n        return css`\n            background-color: ${lighten(0.1, theme.colors.enclosureBackground)};\n            border: 1px solid ${darken(0.03, theme.colors.enclosureBackground)};\n\n            &:hover {\n                background-color: ${rgba(color, 0.8)};\n            }\n        `\n    }}\n`\n","import styled from 'styled-components/macro'\nimport { TrackSteps } from './TrackSteps'\nimport { TrackWithPlayer } from './useStepSequencer'\n\ninterface SequencerTracksProps {\n    tracks: TrackWithPlayer[]\n    currentStep: number\n    toggleStep: (sampleId: string, index: number) => void\n}\n\nexport const SequencerTracks = ({ tracks, currentStep, toggleStep }: SequencerTracksProps) => {\n    return (\n        <Container>\n            {tracks.map((track) => (\n                <TrackSteps\n                    key={track.id}\n                    track={track}\n                    currentStep={currentStep}\n                    toggleStep={toggleStep}\n                />\n            ))}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    grid-row-gap: 5px;\n`\n","import styled from 'styled-components/macro'\nimport { VSpacer } from '../ui/Spacer'\nimport { Desk } from '../ui/Desk'\nimport { Enclosure } from '../ui/Enclosure'\nimport { SequencerHeader } from './SequencerHeader'\nimport { TrackHeading } from './TrackHeading'\nimport { SequencerTimeline } from './SequencerTimeline'\nimport { useStepSequencer } from './useStepSequencer'\nimport { SequencerTracks } from './SequencerTracks'\nimport { SequencerPattern } from '../project/definitions'\n\ninterface SequencerProps {\n    pattern: SequencerPattern\n}\n\nexport const Sequencer = ({ pattern }: SequencerProps) => {\n    const {\n        bars,\n        setBars,\n        doubleBars,\n        steps,\n        stepIndex,\n        tracks,\n        toggleTrack,\n        toggleStep,\n        isPlaying,\n        play,\n        stop,\n    } = useStepSequencer({\n        pattern,\n    })\n\n    return (\n        <Desk>\n            <Enclosure>\n                <SequencerHeader\n                    pattern={pattern}\n                    bars={bars}\n                    setBars={setBars}\n                    doubleBars={doubleBars}\n                    isPlaying={isPlaying}\n                    play={play}\n                    stop={stop}\n                />\n                <VSpacer />\n                <Container>\n                    <TrackHeadings>\n                        {tracks.map((track) => (\n                            <TrackHeading key={track.id} track={track} toggleTrack={toggleTrack} />\n                        ))}\n                    </TrackHeadings>\n                    <div>\n                        <SequencerTimeline steps={steps} current={stepIndex} />\n                        <SequencerTracks\n                            tracks={tracks}\n                            currentStep={stepIndex}\n                            toggleStep={toggleStep}\n                        />\n                    </div>\n                </Container>\n            </Enclosure>\n        </Desk>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 200px auto;\n    grid-column-gap: 16px;\n`\n\nconst TrackHeadings = styled.div`\n    margin-top: 10px;\n    display: grid;\n    grid-row-gap: 5px;\n`\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport * as Tone from 'tone'\nimport { SequencerPattern, SequencerPatternTrack } from '../project/definitions'\n\nexport interface TrackWithPlayer extends SequencerPatternTrack {\n    player: Tone.Player\n}\n\nexport const useStepSequencer = ({ pattern }: { pattern: SequencerPattern }) => {\n    const [bars, setBars] = useState<number>(() => {\n        if (pattern.tracks.length > 0) {\n            return pattern.tracks[0].steps.length / 16\n        }\n\n        return 1\n    })\n    const [stepIndex, setStepIndex] = useState<number>(-1)\n    const steps = bars * 4 * 4\n\n    const [tracks, setTracks] = useState<TrackWithPlayer[]>(pattern.tracks)\n\n    // set a new number of bars and fill all tracks with empty steps\n    // if greater than current or remove steps if lower.\n    const setBarsAndAdjustTracks = useCallback(\n        (newBars: number) => {\n            const newStepCount = newBars * 4 * 4\n\n            setBars(newBars)\n            setTracks((tracks) => {\n                return tracks.map((track) => {\n                    const newSteps = track.steps.slice(0, newStepCount)\n                    for (let i = 0; i < newStepCount - steps; i++) {\n                        newSteps.push(0)\n                    }\n\n                    return {\n                        ...track,\n                        steps: newSteps,\n                    }\n                })\n            })\n        },\n        [steps, setBars, setTracks]\n    )\n\n    // double current bars, compared to `setBarsAndAdjustTracks`,\n    // this replicates existing steps\n    const doubleBars = useCallback(() => {\n        setBars((previous) => previous * 2)\n        setTracks((tracks) => {\n            return tracks.map((track) => {\n                const newSteps = track.steps.slice()\n                track.steps.forEach((step) => {\n                    newSteps.push(step)\n                })\n\n                return {\n                    ...track,\n                    steps: newSteps,\n                }\n            })\n        })\n    }, [setBars, setTracks])\n\n    const toggleTrack = useCallback(\n        (trackId: string) => {\n            setTracks((tracks) =>\n                tracks.map((track) => {\n                    if (track.id !== trackId) return track\n\n                    return {\n                        ...track,\n                        isMuted: !track.isMuted,\n                    }\n                })\n            )\n        },\n        [setTracks]\n    )\n\n    // toggle a track step, which is just a boolean flag\n    // indicating if it's active or not\n    const toggleStep = useCallback(\n        (trackId: string, index: number) => {\n            setTracks((tracks) =>\n                tracks.map((track) => {\n                    if (track.id !== trackId) return track\n\n                    return {\n                        ...track,\n                        steps: track.steps.map((step, stepIndex) => {\n                            if (stepIndex === index) return step === 0 ? 1 : 0\n                            return step\n                        }),\n                    }\n                })\n            )\n        },\n        [setTracks]\n    )\n\n    const [isPlaying, setIsPlaying] = useState(false)\n    const play = useCallback(() => {\n        Tone.Transport.start()\n        setIsPlaying(true)\n    }, [setIsPlaying])\n    const stop = useCallback(() => {\n        Tone.Transport.stop()\n        setIsPlaying(false)\n    }, [setIsPlaying])\n\n    // we use a ref for tracks so that we can pass it to the\n    // main tick function, otherwise the tick function would\n    // be continuously re-created as we edit the steps\n    const tracksRef = useRef<TrackWithPlayer[]>()\n    useEffect(() => {\n        tracksRef.current = tracks\n    }, [tracks])\n\n    // main loop tick function, called by Tone scheduler\n    const tick = useCallback(\n        (time: number, index: number) => {\n            Tone.Draw.schedule(() => {\n                setStepIndex(index)\n            }, time)\n\n            if (tracksRef.current !== undefined) {\n                tracksRef.current.forEach((track) => {\n                    if (track.isMuted) return\n\n                    const shouldPlay = track.steps[index] === 1\n                    if (!shouldPlay) return\n\n                    track.player.start(time, 0)\n                })\n            }\n        },\n        [setStepIndex, tracksRef]\n    )\n\n    // create a new sequence each time the tick function is updated\n    // or the number of steps changes\n    useEffect(() => {\n        // create the sequence and starts it\n        // @todo: add the ability to play the sequence from last time\n        const sequence = new Tone.Sequence(\n            tick,\n            Array.from({ length: steps }).map((_, index) => index),\n            '8n'\n        ).start()\n\n        return () => {\n            sequence.dispose()\n        }\n    }, [tick, steps])\n\n    return {\n        bars,\n        setBars: setBarsAndAdjustTracks,\n        doubleBars,\n        steps,\n        stepIndex,\n        setStepIndex,\n        tracks,\n        setTracks,\n        toggleTrack,\n        toggleStep,\n        isPlaying,\n        play,\n        stop,\n    }\n}\n","import { useCallback, useState } from 'react'\nimport styled from 'styled-components/macro'\nimport { FiVolume, FiVolumeX } from 'react-icons/fi'\nimport { LCDScreen, LCDScreenHighlightedText } from '../ui/LCDScreen'\nimport { Channel } from '../project/definitions'\nimport { useAppStore } from '../useApp'\nimport { darken } from 'polished'\n\ninterface MixerChannelProps {\n    index: number\n    channel: Channel\n}\n\nexport const MixerChannel = ({ index, channel }: MixerChannelProps) => {\n    const [isMuted, setIsMuted] = useState(channel.channel.mute)\n    const openEffect = useAppStore((state) => state.openEffect)\n\n    const toggleMute = useCallback(() => {\n        channel.channel.mute = !isMuted\n        setIsMuted(!isMuted)\n    }, [isMuted, setIsMuted, channel.channel])\n\n    return (\n        <Container>\n            <ChannelName>{index + 1}</ChannelName>\n            <MuteIcon isMuted={isMuted} onClick={toggleMute}>\n                {isMuted && <FiVolumeX />}\n                {!isMuted && <FiVolume />}\n            </MuteIcon>\n            <ValueBlock>\n                <ValueLabel>volume</ValueLabel>\n                <ValueScreen>\n                    <LCDScreenHighlightedText>\n                        {isMuted && '---'}\n                        {!isMuted && channel.channel.volume.value}\n                    </LCDScreenHighlightedText>\n                </ValueScreen>\n            </ValueBlock>\n            <ValueBlock>\n                <ValueLabel>pan</ValueLabel>\n                <ValueScreen>\n                    <LCDScreenHighlightedText>{channel.channel.pan.value}</LCDScreenHighlightedText>\n                </ValueScreen>\n            </ValueBlock>\n            <ValueLabel>effects</ValueLabel>\n            {channel.effects.map((effect) => {\n                return (\n                    <EffectLabel\n                        key={effect.id}\n                        onClick={() => {\n                            openEffect(effect.id)\n                        }}\n                    >\n                        {effect.type}\n                    </EffectLabel>\n                )\n            })}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 80px;\n    padding: 0 6px;\n    height: 320px;\n    position: relative;\n    background-color: ${(props) => props.theme.colors.enclosureBorder};\n    border-radius: 3px;\n`\n\nconst ChannelName = styled.div`\n    display: flex;\n    height: 32px;\n    justify-content: center;\n    align-items: center;\n    font-family: ${(props) => props.theme.typography.headingFont};\n    color: ${(props) => props.theme.colors.textLight};\n    font-size: 12px;\n    text-transform: uppercase;\n`\n\nconst ValueBlock = styled.div`\n    margin-bottom: 9px;\n`\n\nconst ValueLabel = styled.div`\n    font-size: 8px;\n    text-align: center;\n    text-transform: uppercase;\n    margin-bottom: 4px;\n    color: ${(props) => props.theme.colors.textLight};\n`\n\nconst ValueScreen = styled(LCDScreen)`\n    padding: 3px 0;\n    width: 50px;\n    text-align: center;\n`\n\nconst MuteIcon = styled.div<{\n    isMuted: boolean\n}>`\n    font-size: 16px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.textLight};\n    margin-bottom: 9px;\n\n    &:hover {\n        color: ${(props) => props.theme.colors.text};\n    }\n`\n\nconst EffectLabel = styled.div`\n    background-color: ${(props) => darken(0.02, props.theme.colors.enclosureBorder)};\n    color: ${(props) => props.theme.colors.textLight};\n    font-size: 11px;\n    padding: 4px 6px;\n    border-radius: 2px;\n    cursor: pointer;\n    max-width: 68px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-bottom: 5px;\n\n    &:hover {\n        color: ${(props) => props.theme.colors.text};\n    }\n`\n","import styled from 'styled-components/macro'\nimport { VSpacer } from '../ui/Spacer'\nimport { Desk } from '../ui/Desk'\nimport { Enclosure } from '../ui/Enclosure'\nimport { ComponentHeader } from '../ui/ComponentHeader'\nimport { ComponentName, ComponentNameHighlight } from '../ui/ComponentName'\nimport { MixerChannel } from './MixerChannel'\nimport { useAppStore } from '../useApp'\n\nexport const Mixer = () => {\n    const channels = useAppStore((state) => state.channels)\n\n    return (\n        <Desk>\n            <Enclosure>\n                <ComponentHeader>\n                    <ComponentName>\n                        <ComponentNameHighlight>Mixer</ComponentNameHighlight>\n                    </ComponentName>\n                </ComponentHeader>\n                <VSpacer />\n                <Channels channels={channels.length}>\n                    {channels.map((channel, index) => (\n                        <MixerChannel key={index} index={index} channel={channel} />\n                    ))}\n                </Channels>\n            </Enclosure>\n        </Desk>\n    )\n}\n\nconst Channels = styled.div<{\n    channels: number\n}>`\n    display: grid;\n    grid-template-columns: repeat(${(props) => props.channels}, 80px);\n    grid-column-gap: 6px;\n`\n","import { FiX } from 'react-icons/fi'\nimport { SquareIconButton } from './SquareIconButton'\nimport styled from 'styled-components/macro'\n\ninterface CloseButtonProps {\n    onClose: () => void\n}\n\nexport const CloseButton = ({ onClose }: CloseButtonProps) => {\n    return (\n        <Button onClick={onClose}>\n            <FiX />\n        </Button>\n    )\n}\n\nconst Button = styled(SquareIconButton)`\n    width: 18px;\n    height: 18px;\n    font-size: 12px;\n    border-radius: 1px;\n    color: ${(props) => props.theme.colors.textLight};\n\n    &:hover {\n        color: ${(props) => props.theme.colors.text};\n    }\n`\n","import styled from 'styled-components/macro'\nimport { darken, lighten } from 'polished'\n\nexport const NumberInput = styled.input`\n    font-family: ${(props) => props.theme.typography.monospacedFont};\n    border: 1px solid ${(props) => props.theme.colors.enclosureBorder};\n    background-color: ${(props) => darken(0.04, props.theme.colors.enclosureBackground)};\n    color: ${(props) => props.theme.colors.textLight};\n    padding: 5px 5px 5px 12px;\n    cursor: pointer;\n    font-size: 12px;\n\n    &:focus {\n        cursor: auto;\n        outline: 0;\n        color: ${(props) => props.theme.colors.text};\n        background-color: ${(props) => lighten(0.02, props.theme.colors.enclosureBackground)};\n        box-shadow: 0 0 0 1px ${(props) => props.theme.colors.enclosureBorder};\n    }\n`\n","import styled from 'styled-components/macro'\nimport { darken, lighten, rgba } from 'polished'\n\nexport const SliderControl = () => {\n    return (\n        <Container>\n            <Track />\n            <Button />\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: relative;\n    width: 100%;\n    height: 24px;\n`\n\nconst Track = styled.div`\n    position: absolute;\n    top: calc(50% - 2px);\n    width: 100%;\n    height: 4px;\n    background-color: ${(props) => darken(0.02, props.theme.colors.enclosureBackground)};\n    border: 1px solid ${(props) => darken(0.05, props.theme.colors.enclosureBackground)};\n    border-radius: 2px;\n`\n\nconst Button = styled.div`\n    position: absolute;\n    top: calc(50% - 7px);\n    width: 24px;\n    height: 14px;\n    background-color: ${(props) => lighten(0.03, props.theme.colors.wood)};\n    border-radius: 2px;\n    cursor: pointer;\n    box-shadow: 1px 2px 4px\n            ${(props) => rgba(darken(0.1, props.theme.colors.enclosureBackground), 0.35)},\n        inset 1px 1px 0 ${(props) => lighten(0.12, props.theme.colors.wood)},\n        inset -1px -1px 0 ${(props) => darken(0.06, props.theme.colors.wood)};\n`\n","import { ChangeEvent, useCallback, useState } from 'react'\nimport styled from 'styled-components/macro'\nimport * as Tone from 'tone'\nimport { NumberInput } from '../ui/controls/NumberInput'\nimport { SliderControl } from '../ui/controls/SliderControl'\n\ninterface EffectWetControlProps {\n    effect: Tone.Reverb | Tone.Distortion\n}\n\nexport const EffectWetControl = ({ effect }: EffectWetControlProps) => {\n    const [wet, setWet] = useState(effect.wet.value)\n\n    const handleChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const newWet = Number(event.target.value)\n            effect.wet.value = newWet\n            setWet(newWet)\n        },\n        [setWet, effect]\n    )\n\n    return (\n        <>\n            <span>wet</span>\n            <NumberInput\n                type=\"number\"\n                onChange={handleChange}\n                value={wet}\n                min={0}\n                max={1}\n                step={0.05}\n            />\n            <SliderContainer>\n                <SliderControl />\n            </SliderContainer>\n        </>\n    )\n}\n\nconst SliderContainer = styled.div`\n    grid-column-start: 1;\n    grid-column-end: 3;\n`\n","import styled from 'styled-components/macro'\nimport { ChangeEvent, useCallback, useState } from 'react'\nimport { VSpacer } from '../ui/Spacer'\nimport { Desk } from '../ui/Desk'\nimport { Enclosure } from '../ui/Enclosure'\nimport { ComponentHeader } from '../ui/ComponentHeader'\nimport { ComponentName, ComponentNameHighlight } from '../ui/ComponentName'\nimport { CloseButton } from '../ui/controls/CloseButton'\nimport { NumberInput } from '../ui/controls/NumberInput'\nimport { Reverb } from './definitions'\nimport { useAppStore } from '../useApp'\nimport { EffectWetControl } from './EffectWetControl'\n\ninterface ReverbControlsProps {\n    reverb: Reverb\n}\n\nexport const ReverbControls = ({ reverb }: ReverbControlsProps) => {\n    const closeEffect = useAppStore((state) => state.closeEffect)\n    const handleClose = useCallback(() => {\n        closeEffect(reverb.id)\n    }, [closeEffect, reverb.id])\n\n    const [preDelay, setPreDelay] = useState<number>(reverb.instance.preDelay as number)\n    const handlePreDelayChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const newPreDelay = Number(event.target.value)\n            reverb.instance.preDelay = newPreDelay\n            setPreDelay(newPreDelay)\n        },\n        [setPreDelay, reverb.instance]\n    )\n\n    const [decay, setDecay] = useState<number>(reverb.instance.decay as number)\n    const handleDecayChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const newDecay = Number(event.target.value)\n            reverb.instance.decay = newDecay\n            setDecay(newDecay)\n        },\n        [setDecay, reverb.instance]\n    )\n\n    return (\n        <Desk>\n            <Enclosure>\n                <Header>\n                    <ComponentName>\n                        <ComponentNameHighlight>Reverb</ComponentNameHighlight>\n                    </ComponentName>\n                    <CloseButton onClose={handleClose} />\n                </Header>\n                <VSpacer />\n                <Content>\n                    <span>decay</span>\n                    <NumberInput\n                        type=\"number\"\n                        onChange={handleDecayChange}\n                        value={decay}\n                        min={0.001}\n                        step={0.001}\n                    />\n                    <span>pre delay</span>\n                    <NumberInput\n                        type=\"number\"\n                        onChange={handlePreDelayChange}\n                        value={preDelay}\n                        min={0}\n                        step={0.05}\n                    />\n                    <EffectWetControl effect={reverb.instance} />\n                </Content>\n            </Enclosure>\n        </Desk>\n    )\n}\n\nconst Header = styled(ComponentHeader)`\n    justify-content: space-between;\n`\n\nconst Content = styled.div`\n    font-size: 12px;\n    color: ${(props) => props.theme.colors.textLight};\n    display: grid;\n    align-items: center;\n    grid-template-columns: 9ch 90px;\n    grid-column-gap: 12px;\n    grid-row-gap: 9px;\n`\n","import styled from 'styled-components/macro'\nimport { ChangeEvent, useCallback, useState } from 'react'\nimport { VSpacer } from '../ui/Spacer'\nimport { Desk } from '../ui/Desk'\nimport { Enclosure } from '../ui/Enclosure'\nimport { ComponentHeader } from '../ui/ComponentHeader'\nimport { ComponentName, ComponentNameHighlight } from '../ui/ComponentName'\nimport { CloseButton } from '../ui/controls/CloseButton'\nimport { NumberInput } from '../ui/controls/NumberInput'\nimport { Distortion } from './definitions'\nimport { useAppStore } from '../useApp'\nimport { EffectWetControl } from './EffectWetControl'\n\ninterface DistortionControlsProps {\n    distortion: Distortion\n}\n\nexport const DistortionControls = ({ distortion: distortionEffect }: DistortionControlsProps) => {\n    const closeEffect = useAppStore((state) => state.closeEffect)\n    const handleClose = useCallback(() => {\n        closeEffect(distortionEffect.id)\n    }, [closeEffect, distortionEffect.id])\n\n    const [distortion, setDistortion] = useState<number>(distortionEffect.instance.distortion)\n    const handleDistortionChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const newDistortion = Number(event.target.value)\n            distortionEffect.instance.distortion = newDistortion\n            setDistortion(newDistortion)\n        },\n        [setDistortion, distortionEffect.instance]\n    )\n\n    return (\n        <Desk>\n            <Enclosure>\n                <Header>\n                    <ComponentName>\n                        <ComponentNameHighlight>Distortion</ComponentNameHighlight>\n                    </ComponentName>\n                    <CloseButton onClose={handleClose} />\n                </Header>\n                <VSpacer />\n                <Content>\n                    <span>distortion</span>\n                    <NumberInput\n                        type=\"number\"\n                        onChange={handleDistortionChange}\n                        value={distortion}\n                        min={0}\n                        max={1}\n                        step={0.01}\n                    />\n                    <EffectWetControl effect={distortionEffect.instance} />\n                </Content>\n            </Enclosure>\n        </Desk>\n    )\n}\n\nconst Header = styled(ComponentHeader)`\n    justify-content: space-between;\n`\n\nconst Content = styled.div`\n    font-size: 12px;\n    color: ${(props) => props.theme.colors.textLight};\n    display: grid;\n    align-items: center;\n    grid-template-columns: 10ch 100px;\n    grid-column-gap: 12px;\n    grid-row-gap: 9px;\n`\n","import { ReverbControls } from './ReverbControls'\nimport { DistortionControls } from './DistortionControls'\nimport { useAppStore } from '../useApp'\n\nexport const EffectsControls = () => {\n    const effects = useAppStore((state) => state.openedEffects)\n\n    return (\n        <>\n            {effects.map((effect) => {\n                if (effect.type === 'reverb') {\n                    return <ReverbControls key={effect.id} reverb={effect} />\n                }\n                if (effect.type === 'distortion') {\n                    return <DistortionControls key={effect.id} distortion={effect} />\n                }\n\n                // no component matching the pattern type available\n                return null\n            })}\n        </>\n    )\n}\n","import React from 'react'\nimport styled, { ThemeProvider } from 'styled-components/macro'\nimport './ui/normalize.css'\nimport { GlobalStyle } from './ui/theme/GlobalStyle'\nimport { AppHeader } from './ui/AppHeader'\nimport { Explorer } from './explorer/Explorer'\nimport { Sequencer } from './sequencer/Sequencer'\nimport { Mixer } from './mixer/Mixer'\n// import { Keyboard } from './keyboard/Keyboard'\n// import { Drums } from './drums/Drums'\nimport { EffectsControls } from './effects/EffectsControls'\nimport { useAppStore } from './useApp'\n// import { SampleComponent } from './SampleComponent'\n\nfunction App() {\n    const theme = useAppStore((state) => state.theme)\n    const project = useAppStore((state) => state.project)\n    const patterns = useAppStore((state) => state.openedPatterns)\n    const app = useAppStore()\n    console.log(app)\n\n    return (\n        <ThemeProvider theme={theme}>\n            <GlobalStyle />\n            <Layout>\n                <AppHeader />\n                <Explorer />\n                <Content>\n                    {/* <SampleComponent /> */}\n                    {patterns.map((pattern) => {\n                        if (pattern.type === 'sequencer') {\n                            return (\n                                <Row key={pattern.id}>\n                                    <Sequencer pattern={pattern} />\n                                </Row>\n                            )\n                        }\n\n                        // no component matching the pattern type available\n                        return null\n                    })}\n                    {project && (\n                        <Row>\n                            <Mixer />\n                            <EffectsControls />\n                        </Row>\n                    )}\n                    {/*\n                    <Keyboard />\n                    <Drums />\n                    */}\n                </Content>\n            </Layout>\n        </ThemeProvider>\n    )\n}\n\nconst Layout = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: grid;\n    grid-template-columns: 200px auto;\n    grid-template-rows: 46px auto;\n`\n\nconst Content = styled.div`\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding: 6px;\n`\n\nconst Row = styled.div`\n    display: flex;\n`\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}